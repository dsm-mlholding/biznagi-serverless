AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Lambda Template (TypeScript)

Parameters:
  StageName:
    Type: String
    Description: Nombre del stages
    Default: v1
  NameService:
    Type: String
    Default: "biznagi-serverless"
    Description: "Lambda function name test"
  UserTableArn:
    Type: String
    Default: "arn:aws:dynamodb:us-east-1:047339594152:table/User"
    Description: ARN de la tabla DynamoDB existente

Globals:
  Function:
    Timeout: 10
    Runtime: nodejs22.x

Resources:
  PublicApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${NameService}-public"
      StageName: !Ref StageName
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: openapi/openapi.yaml
            
  # UserTable:
  #   Type: AWS::DynamoDB::Table
  #   Properties:
  #     TableName: User
  #     BillingMode: PAY_PER_REQUEST
  #     AttributeDefinitions:
  #       - AttributeName: id
  #         AttributeType: S
  #     KeySchema:
  #       - AttributeName: id
  #         KeyType: HASH

  ##UNCOMMENT IF YOU WANT TO ENABLE PRIVATE API
  # PrivateApiGateway:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     StageName: !Ref StageName
  #     DefinitionUri: openapi/openapi.yaml

  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref NameService
      CodeUri: ../../
      Handler: dist/interfaces/aws-lambda/handler.handler
      Description: "Deploy test"
      Events:
        PublicApi:
          Type: Api
          Properties:
            Path: /
            Method: post
            RestApiId: !Ref PublicApiGateway
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:Scan
                - dynamodb:Query
                - dynamodb:DescribeTable
              Resource: !Ref UserTableArn
            - Effect: Allow
              Action:
                - execute-api:Invoke
              Resource: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*"

        ##UNCOMMENT IF YOU WANT TO ENABLE PRIVATE API
        # PrivateApi:
        #   Type: Api
        #   Properties:
        #     RestApiId: !Ref PrivateApiGateway
        
  PathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    DependsOn: PublicApiGateway
    Properties:
      BasePath: "devops" 
      DomainName: '{{resolve:secretsmanager:sam-deploy:SecretString:DomainName}}'
      RestApiId: !Ref PublicApiGateway
      Stage: !Ref PublicApiGateway.Stage

  ApiPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref LambdaFunction
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${PublicApiGateway}/*/*"
