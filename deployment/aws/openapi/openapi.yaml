openapi: '3.0.0'
info:
  title: 'Biznagi Serverless API'
  version: '1.0.0'
  description: 'API automatically generated from code structure'
servers:
  - url: 'https://api.mlholding.com'
paths:
  /hello:
    get:
      summary: 'GET /hello'
      operationId: 'gethello'
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: 'when_no_match'
        httpMethod: 'POST'
        contentHandling: 'CONVERT_TO_TEXT'
        type: 'aws_proxy'
  /hello/{name}:
    parameters:
      - name: 'name'
        in: 'path'
        required: true
        schema:
          type: 'string'
    get:
      summary: 'GET /hello/{name}'
      operationId: 'gethelloname'
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: 'when_no_match'
        httpMethod: 'POST'
        contentHandling: 'CONVERT_TO_TEXT'
        type: 'aws_proxy'
components:
  schemas:
    SuccessResponse:
      type: 'object'
      properties:
        success:
          type: 'boolean'
        data:
          type: 'object'
        message:
          type: 'string'
    ErrorResponse:
      type: 'object'
      properties:
        success:
          type: 'boolean'
        error:
          type: 'string'
        message:
          type: 'string'
